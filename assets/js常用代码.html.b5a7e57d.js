import{_ as n,c as s}from"./app.2a03b46a.js";const a={},p=s(`<h2 id="_1\u3001\u5728\u73B0\u6709\u8282\u70B9\u540E\u63D2\u5165\u4E00\u4E2A\u65B0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5728\u73B0\u6709\u8282\u70B9\u540E\u63D2\u5165\u4E00\u4E2A\u65B0\u5143\u7D20" aria-hidden="true">#</a> 1\u3001\u5728\u73B0\u6709\u8282\u70B9\u540E\u63D2\u5165\u4E00\u4E2A\u65B0\u5143\u7D20</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/****
 Description: \u5728\u73B0\u6709\u8282\u70B9\u540E\u9762\u63D2\u5165\u4E00\u4E2A\u65B0\u5143\u7D20\uFF1B
 \u5982\u679C\u5B9A\u4F4D\u8282\u70B9\u662F\u6700\u540E\u4E00\u4E2A\u8282\u70B9\uFF0C\u5219\u76F4\u63A5\u6DFB\u52A0\u5230parent\u5143\u7D20\u4E0A\u3002
 \u5982\u679C\u4E0D\u662F\uFF0C\u5C31\u628A\u65B0\u5143\u7D20\u63D2\u5165\u5230\u76EE\u6807\u5143\u7D20\u548C\u76EE\u6807\u5143\u7D20\u7684\u4E0B\u4E00\u4E2A\u5144\u5F1F\u5143\u7D20\u4E4B\u95F4\u3002
 Input:
 newElement:    \u9700\u8981\u6DFB\u52A0\u7684\u65B0\u8282\u70B9
 targetElement: \u8981\u63D2\u5165\u7684\u5B9A\u4F4D\u8282\u70B9
 ****/</span>
<span class="token keyword">function</span> <span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token parameter">newElement<span class="token punctuation">,</span> targetElement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> parent <span class="token operator">=</span> targetElement<span class="token punctuation">.</span>parentNode
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>lastChild <span class="token operator">==</span> targetElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newElement<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        parent<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newElement<span class="token punctuation">,</span> targetElement<span class="token punctuation">.</span>nextSibling<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_2\u3001\u9875\u9762\u52A0\u8F7D\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u9875\u9762\u52A0\u8F7D\u4E8B\u4EF6" aria-hidden="true">#</a> 2\u3001\u9875\u9762\u52A0\u8F7D\u4E8B\u4EF6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Description: \u628A\u73B0\u6709\u7684 window.onload \u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u503C\u5B58\u5165\u53D8\u91CF oldOnload
 *              \u5982\u679C\u5728\u8FD9\u4E2A\u5904\u7406\u51FD\u6570\u4E0A\u8FD8\u6CA1\u6709\u7ED1\u5B9A\u4EFB\u4F55\u51FD\u6570\uFF0C\u5C31\u50CF\u5E73\u65F6\u90A3\u6837\u628A\u65B0\u51FD\u6570\u6DFB\u52A0\u7ED9\u5B83\u3002
 *              \u5982\u679C\u8FD9\u4E2A\u5904\u7406\u51FD\u6570\u4E0A\u5DF2\u7ECF\u7ED1\u5B9A\u4E86\u4E00\u4E9B\u51FD\u6570\uFF0C\u5C31\u628A\u65B0\u51FD\u6570\u8FFD\u52A0\u5230\u73B0\u6709\u6307\u4EE4\u7684\u672B\u5C3E\u3002
 * Input:
 *  fun: \u9700\u8981\u52A0\u8F7D\u7684\u6267\u884C\u51FD\u6570
 * Call:
 *  addLoadEvent(fun1)
 *  addLoadEvent(fun2)
 * */</span>
<span class="token keyword">function</span> <span class="token function">addLoadEvent</span><span class="token punctuation">(</span><span class="token parameter">fun</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> oldOnload <span class="token operator">=</span> window<span class="token punctuation">.</span>onload
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window<span class="token punctuation">.</span>onload <span class="token operator">!=</span> <span class="token string">&#39;funciton&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span>onload <span class="token operator">=</span> fun
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">oldOnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="_3\u3001element\u7684\u8054\u7EA7\u9009\u62E9\u5668\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_3\u3001element\u7684\u8054\u7EA7\u9009\u62E9\u5668\u6570\u636E" aria-hidden="true">#</a> 3\u3001element\u7684\u8054\u7EA7\u9009\u62E9\u5668\u6570\u636E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5229\u7528\u9AD8\u5FB7\u5730\u56FEweb\u670D\u52A1api\u83B7\u53D6\u4E09\u7EA7\u884C\u653F\u533A\u57DF</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5229\u7528\u7ED3\u6784\u8D4B\u503C\u83B7\u5F97\u6240\u6709\u884C\u653F\u533A\u57DF\u4FE1\u606F</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">districts</span><span class="token operator">:</span> location<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://restapi.amap.com/v3/config/district?key=31dd798fb66188348b01506618fe8fd1&amp;subdistrict=3&amp;extensions=base&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> location<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>districts
    <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5BF9\u8C61\u7528\u6765\u5B58\u653E\u7B26\u5408element\u8054\u7EA7\u9009\u62E9\u5668\u6570\u636E\u7ED3\u6784\u7684\u6570\u7EC4</span>
    <span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u7B2C\u4E00\u7EA7\u5FAA\u73AF\u83B7\u53D6\u7701/\u76F4\u8F96\u5E02\u533A\u57DF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> a <span class="token keyword">of</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> tion <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> a<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> a<span class="token punctuation">.</span>name<span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>districts<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tion<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            position<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tion<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7B2C\u4E8C\u7EA7</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> b <span class="token keyword">of</span> a<span class="token punctuation">.</span>districts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> tion1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> b<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> b<span class="token punctuation">.</span>name<span class="token punctuation">}</span>
            tion<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tion1<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>districts<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                tion1<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u7B2C\u4E09\u7EA7</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> c <span class="token keyword">of</span> b<span class="token punctuation">.</span>districts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> tion2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> c<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> c<span class="token punctuation">.</span>name<span class="token punctuation">}</span>
                tion1<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tion2<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6309\u9996\u5B57\u6BCD\u8FDB\u884C\u6392\u5E8F</span>
            tion1<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> a<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token string">&#39;zh&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        tion<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> a<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token string">&#39;zh&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        position<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tion<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    position<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token string">&#39;zh&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> position
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="_4\u3001ajax" tabindex="-1"><a class="header-anchor" href="#_4\u3001ajax" aria-hidden="true">#</a> 4\u3001Ajax</h2><h3 id="_4-1\u3001get\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#_4-1\u3001get\u8BF7\u6C42" aria-hidden="true">#</a> 4.1\u3001get\u8BF7\u6C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// get\u8BF7\u6C42</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6570\u636E\u8FD4\u56DE\u6210\u529F&#39;</span><span class="token punctuation">)</span>

        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C01\u88C5get\u8BF7\u6C42</span>
<span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6570\u636E\u8FD4\u56DE\u6210\u529F&#39;</span><span class="token punctuation">)</span>
            <span class="token function">callback</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528</span>
<span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="_4-2\u3001promise-get-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#_4-2\u3001promise-get-\u8BF7\u6C42" aria-hidden="true">#</a> 4.2\u3001Promise get \u8BF7\u6C42</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u5C01\u88C5 Promise \u7684 get \u8BF7\u6C42</span>
<span class="token keyword">function</span> <span class="token function">pGet</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65E2\u53EF\u4EE5\u8FD9\u4E48\u8C03\u7528</span>
<span class="token function">pGet</span><span class="token punctuation">(</span><span class="token string">&#39;./data/data.json&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u4E5F\u53EF\u4EE5\u8FD9\u4E48\u8C03\u7528</span>
<span class="token function">pGet</span><span class="token punctuation">(</span><span class="token string">&#39;./data/data.json&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="_5\u3001\u83B7\u53D6\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C-\u56DE\u8C03\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u83B7\u53D6\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C-\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a> 5\u3001\u83B7\u53D6\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\uFF08\u56DE\u8C03\u51FD\u6570\uFF09</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// var callback = function (data) { console.log(data) }</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_6\u3001\u81EA\u5B9A\u4E49\u51FD\u6570\u5934\u90E8\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u81EA\u5B9A\u4E49\u51FD\u6570\u5934\u90E8\u63CF\u8FF0" aria-hidden="true">#</a> 6\u3001\u81EA\u5B9A\u4E49\u51FD\u6570\u5934\u90E8\u63CF\u8FF0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * [findById description]
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">}</span></span>   <span class="token parameter">id</span>       [description]
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">callback</span> [description]
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">}</span></span>            [description]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,15);function t(e,o){return p}var l=n(a,[["render",t],["__file","js\u5E38\u7528\u4EE3\u7801.html.vue"]]);export{l as default};
